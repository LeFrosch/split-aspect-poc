module(name = "intellij_aspect")

bazel_dep(name = "rules_cc", version = "0.2.9")
bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "bazel_skylib", version = "1.8.2")

version = use_extension("//private:extension.bzl", "version")
use_repo(version, "bazel_version")

bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.0", dev_dependency = True)
bazel_dep(name = "rules_pkg", version = "1.1.0", dev_dependency = True)
bazel_dep(name = "protobuf", version = "32.1", dev_dependency = True)
bazel_dep(name = "rules_java", version = "8.16.1", dev_dependency = True)
bazel_dep(name = "rules_kotlin", version = "2.1.9", dev_dependency = True)
bazel_dep(name = "rules_jvm_external", version = "6.8", dev_dependency = True)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "junit:junit:4.13.2",
        "com.google.truth:truth:1.4.4",
        "com.google.code.gson:gson:2.10.1",
        "com.google.errorprone:error_prone_annotations:2.23.0",
        "com.google.guava:guava:33.0.0-jre",
    ],
    known_contributing_modules = [
        "bazel_worker_java",
        "intellij_aspect",
        "protobuf",
    ],
)
use_repo(maven, "maven")

cc_toolchains = use_extension("@rules_cc//cc:extensions.bzl", "cc_configure_extension")
use_repo(cc_toolchains, "local_config_cc_toolchains")

zig_toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(zig_toolchains, "zig_sdk")

register_toolchains(
    "@local_config_cc_toolchains//...",
    "@zig_sdk//toolchain/...",
    "@zig_sdk//libc_aware/toolchain/...",
)
